Index: app/src/main/res/layout/activity_profilo_utente.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView17\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"176dp\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_marginEnd=\"176dp\"\r\n        android:text=\"Profilo utente\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.52\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"140dp\"\r\n        android:layout_marginTop=\"64dp\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView17\"\r\n        tools:srcCompat=\"@tools:sample/avatars\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView18\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"116dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:text=\"Modifica immagine di profilo\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/editTextText4\"\r\n        android:layout_width=\"315dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginStart=\"48dp\"\r\n        android:layout_marginTop=\"24dp\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"text\"\r\n        android:text=\"Nome\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView18\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/editTextText5\"\r\n        android:layout_width=\"315dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginStart=\"48dp\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"text\"\r\n        android:text=\"Cognome\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/editTextText4\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/editTextText6\"\r\n        android:layout_width=\"315dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginStart=\"48dp\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"text\"\r\n        android:text=\"Indirizzo\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/editTextText5\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView19\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"48dp\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:text=\"Esci dall'account\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/editTextText6\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView20\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"48dp\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:text=\"Elima account utente\"\r\n        android:textColor=\"#E91E63\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView19\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_profilo_utente.xml b/app/src/main/res/layout/activity_profilo_utente.xml
--- a/app/src/main/res/layout/activity_profilo_utente.xml	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/res/layout/activity_profilo_utente.xml	(date 1716994248332)
@@ -12,16 +12,16 @@
         android:layout_marginStart="176dp"
         android:layout_marginTop="16dp"
         android:layout_marginEnd="176dp"
-        android:text="Profilo utente"
+        android:text="@string/profilo_utente"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.52"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
 
     <ImageView
-        android:id="@+id/imageView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:id="@+id/imageViewProfile"
+        android:layout_width="150dp"
+        android:layout_height="150dp"
         android:layout_marginStart="140dp"
         android:layout_marginTop="64dp"
         app:layout_constraintStart_toStartOf="parent"
@@ -29,70 +29,90 @@
         tools:srcCompat="@tools:sample/avatars" />
 
     <TextView
-        android:id="@+id/textView18"
+        android:id="@+id/textViewModProfileImage"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="116dp"
         android:layout_marginTop="8dp"
-        android:text="Modifica immagine di profilo"
+        android:text="@string/modifica_immagine_di_profilo"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/imageView" />
+        app:layout_constraintTop_toBottomOf="@+id/imageViewProfile" />
 
     <EditText
-        android:id="@+id/editTextText4"
+        android:id="@+id/editTextNomeUP"
         android:layout_width="315dp"
         android:layout_height="48dp"
         android:layout_marginStart="48dp"
         android:layout_marginTop="24dp"
         android:ems="10"
         android:inputType="text"
-        android:text="Nome"
+        android:text="@string/nome"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/textView18" />
+        app:layout_constraintTop_toBottomOf="@+id/textViewModProfileImage" />
 
     <EditText
-        android:id="@+id/editTextText5"
+        android:id="@+id/editTextCognomeUP"
         android:layout_width="315dp"
         android:layout_height="48dp"
         android:layout_marginStart="48dp"
         android:layout_marginTop="12dp"
         android:ems="10"
         android:inputType="text"
-        android:text="Cognome"
+        android:text="@string/cognome"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/editTextText4" />
+        app:layout_constraintTop_toBottomOf="@+id/editTextNomeUP" />
 
     <EditText
-        android:id="@+id/editTextText6"
+        android:id="@+id/editTextIndirizzoUP"
         android:layout_width="315dp"
         android:layout_height="48dp"
         android:layout_marginStart="48dp"
         android:layout_marginTop="12dp"
         android:ems="10"
         android:inputType="text"
-        android:text="Indirizzo"
+        android:text="@string/indirizzo"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/editTextCognomeUP" />
+
+    <Button
+        android:id="@+id/buttonSave"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="48dp"
+        android:layout_marginTop="16dp"
+        android:text="@string/salva"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/editTextText5" />
+        app:layout_constraintTop_toBottomOf="@+id/editTextIndirizzoUP" />
+
+    <Button
+        android:id="@+id/buttonCancel"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:layout_marginEnd="52dp"
+        android:text="@string/annulla"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/editTextIndirizzoUP" />
 
     <TextView
-        android:id="@+id/textView19"
+        android:id="@+id/textViewLogout"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="48dp"
-        android:layout_marginTop="12dp"
-        android:text="Esci dall'account"
+        android:layout_marginTop="108dp"
+        android:text="@string/esci_dall_account"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/editTextText6" />
+        app:layout_constraintTop_toBottomOf="@+id/editTextIndirizzoUP" />
 
     <TextView
-        android:id="@+id/textView20"
+        android:id="@+id/textViewEliminaAccount"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="48dp"
         android:layout_marginTop="12dp"
-        android:text="Elima account utente"
+        android:text="@string/elimina_account_utente"
         android:textColor="#E91E63"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/textView19" />
+        app:layout_constraintTop_toBottomOf="@+id/textViewLogout" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.androidApplication)\r\n    alias(libs.plugins.jetbrainsKotlinAndroid)\r\n    id(\"kotlin-kapt\")\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.greenmarket\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.greenmarket\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        viewBinding = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.androidx.constraintlayout)\r\n    implementation(libs.androidx.lifecycle.livedata.ktx)\r\n    implementation(libs.androidx.lifecycle.viewmodel.ktx)\r\n    implementation(libs.androidx.navigation.fragment.ktx)\r\n    implementation(libs.androidx.navigation.ui.ktx)\r\n    implementation(libs.androidx.legacy.support.v4)\r\n    implementation(libs.androidx.fragment.ktx)\r\n    implementation(libs.firebase.auth.ktx)\r\n    implementation(libs.androidx.annotation)\r\n    implementation(libs.androidx.activity)\r\n    implementation(libs.firebase.firestore)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n\r\n    // Navigation Component\r\n    implementation(\"androidx.navigation:navigation-fragment-ktx:2.2.2\")\r\n    implementation(\"androidx.navigation:navigation-ui-ktx:2.2.2\")\r\n\r\n    // Room components\r\n    implementation(\"androidx.room:room-runtime:2.2.5\")\r\n    kapt(\"androidx.room:room-compiler:2.2.5\")\r\n    implementation(\"androidx.room:room-ktx:2.2.5\")\r\n    androidTestImplementation(\"androidx.room:room-testing:2.2.5\")\r\n\r\n    // Lifecycle components\r\n    implementation(\"androidx.lifecycle:lifecycle-extensions:2.2.0\")\r\n    implementation(\"androidx.lifecycle:lifecycle-common-java8:2.2.0\")\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0\")\r\n\r\n    // Kotlin components\r\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.20\")\r\n    api(\"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1\")\r\n    api(\"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1\")\r\n\r\n    //Firebase\r\n    implementation(\"com.google.firebase:firebase-bom:33.0.0\")\r\n    implementation(\"com.google.firebase:firebase-analytics:21.2.0\")\r\n    implementation(\"com.google.firebase:firebase-auth:22.1.1\")\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/build.gradle.kts	(date 1716998393161)
@@ -56,6 +56,7 @@
     implementation(libs.androidx.annotation)
     implementation(libs.androidx.activity)
     implementation(libs.firebase.firestore)
+    implementation(libs.firebase.storage.ktx)
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
@@ -85,4 +86,11 @@
     implementation("com.google.firebase:firebase-analytics:21.2.0")
     implementation("com.google.firebase:firebase-auth:22.1.1")
 
+    //Glide
+    implementation("com.github.bumptech.glide:glide:4.15.1")
+    annotationProcessor("com.github.bumptech.glide:compiler:4.15.1")
+
+    //Coroutines
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")
 }
\ No newline at end of file
Index: app/src/main/java/com/example/greenmarket/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.greenmarket\r\n\r\nimport android.os.Bundle\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.example.greenmarket.databinding.ActivityMainBinding\r\nimport com.example.greenmarket.db.GMDatabase\r\nimport com.google.firebase.auth.FirebaseAuth\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityMainBinding\r\n    private lateinit var auth: FirebaseAuth\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        // Initialize Firebase Auth\r\n        auth = FirebaseAuth.getInstance()\r\n\r\n        GMDatabase.populateDatabase(this)\r\n\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        val navView: BottomNavigationView = binding.navView\r\n\r\n        val navController = findNavController(R.id.nav_host_fragment_activity_main)\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        val appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.navigation_home, R.id.navigation_ricerca, R.id.navigation_lista_della_spesa,\r\n                R.id.navigation_ricettario, R.id.navigation_altro\r\n            )\r\n        )\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/greenmarket/MainActivity.kt b/app/src/main/java/com/example/greenmarket/MainActivity.kt
--- a/app/src/main/java/com/example/greenmarket/MainActivity.kt	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/java/com/example/greenmarket/MainActivity.kt	(date 1716908374485)
@@ -1,5 +1,6 @@
 package com.example.greenmarket
 
+import android.content.Intent
 import android.os.Bundle
 import com.google.android.material.bottomnavigation.BottomNavigationView
 import androidx.appcompat.app.AppCompatActivity
@@ -9,6 +10,8 @@
 import androidx.navigation.ui.setupWithNavController
 import com.example.greenmarket.databinding.ActivityMainBinding
 import com.example.greenmarket.db.GMDatabase
+import com.example.greenmarket.ui.login.LoginActivity
+import com.example.greenmarket.ui.login.UserProfileActivity
 import com.google.firebase.auth.FirebaseAuth
 
 class MainActivity : AppCompatActivity() {
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\" translatable=\"false\">GreenMarket</string>\r\n    <string name=\"title_home\">Home</string>\r\n    <string name=\"title_ricerca\">Ricerca</string>\r\n    <string name=\"title_lista_spesa\">Lista spesa</string>\r\n    <string name=\"title_ricettario\">Ricettario</string>\r\n    <string name=\"title_altro\">Altro</string>\r\n    <string name=\"accedi\">Accedi</string>\r\n    <string name=\"benuvenuto_in_greenmarket\">Benuvenuto in GreenMarket!</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"accediButton\">Accedi</string>\r\n    <string name=\"password_dimenticata\">Password dimenticata?</string>\r\n    <string name=\"registrati\">Registrati</string>\r\n    <string name=\"nome\">Nome</string>\r\n    <string name=\"continua\">Continua</string>\r\n    <string name=\"cognome\">Cognome</string>\r\n    <string name=\"emailRegistrazione\">Email</string>\r\n    <string name=\"indirizzo\">Indirizzo</string>\r\n    <string name=\"emailRegister\">Email</string>\r\n    <string name=\"passwordRegister\">Password</string>\r\n    <string name=\"ho_letto_e_accetto_i_termini_e_le_condizioni\">Ho letto e accetto i termini e le condizioni d\\'uso</string>\r\n    <string name=\"hai_gi_un_account\">Hai già un account?</string>\r\n    <string name=\"accediRegister\">Accedi</string>\r\n    <string name=\"il_tuo_indirizzo_email\">Il tuo indirizzo email</string>\r\n    <string name=\"la_tua_password\">La tua password</string>\r\n    <string name=\"conferma_password\">Conferma Password</string>\r\n    <string name=\"conferma_la_tua_password\">Conferma la tua password</string>\r\n    <string name=\"il_tuo_nome\">Il tuo nome</string>\r\n    <string name=\"il_tuo_cognome\">Il tuo cognome</string>\r\n    <string name=\"il_tuo_indirizzo\">Il tuo indirizzo</string>\r\n    <string name=\"inserici_l_indirizzo_email_associato_al_tuo_account\">Inserici l\\'indirizzo email associato al tuo account</string>\r\n    <string name=\"recupara_password\">Recupara Password</string>\r\n    <string name=\"torna_al_login\">Torna al Login</string>\r\n    <string name=\"recupera_password\">Recupera Password</string>\r\n    <string name=\"title_activity_login\">LoginActivity</string>\r\n    <string name=\"prompt_email\">Email</string>\r\n    <string name=\"prompt_password\">Password</string>\r\n    <string name=\"action_sign_in\">Sign in or register</string>\r\n    <string name=\"action_sign_in_short\">Sign in</string>\r\n    <string name=\"welcome\">\"Welcome !\"</string>\r\n    <string name=\"invalid_username\">Not a valid username</string>\r\n    <string name=\"invalid_password\">Password must be >5 characters</string>\r\n    <string name=\"login_failed\">\"Login failed\"</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/res/values/strings.xml	(date 1716994248348)
@@ -42,4 +42,10 @@
     <string name="invalid_username">Not a valid username</string>
     <string name="invalid_password">Password must be >5 characters</string>
     <string name="login_failed">"Login failed"</string>
+    <string name="profilo_utente">Profilo utente</string>
+    <string name="modifica_immagine_di_profilo">Modifica immagine di profilo</string>
+    <string name="salva">Salva</string>
+    <string name="annulla">Annulla</string>
+    <string name="esci_dall_account">Esci dall\'account</string>
+    <string name="elimina_account_utente">Elimina account utente</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/container\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingTop=\"?attr/actionBarSize\">\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:background=\"?android:attr/windowBackground\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:menu=\"@menu/bottom_nav_menu\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_host_fragment_activity_main\"\r\n        android:name=\"androidx.navigation.fragment.NavHostFragment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:defaultNavHost=\"true\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/nav_view\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:navGraph=\"@navigation/mobile_navigation\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1716908374472)
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/container"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.4.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nappcompat = \"1.6.1\"\r\nmaterial = \"1.12.0\"\r\nconstraintlayout = \"2.1.4\"\r\nlifecycleLivedataKtx = \"2.7.0\"\r\nlifecycleViewmodelKtx = \"2.7.0\"\r\nnavigationFragmentKtx = \"2.6.0\"\r\nnavigationUiKtx = \"2.6.0\"\r\nroomCompiler = \"2.5.0\"\r\nroomRuntime = \"2.6.1\"\r\nlegacySupportV4 = \"1.0.0\"\r\nfragmentKtx = \"1.5.6\"\r\nfirebaseAuthKtx = \"23.0.0\"\r\ngoogleGmsGoogleServices = \"4.4.1\"\r\nfirebaseAuth = \"23.0.0\"\r\nannotation = \"1.6.0\"\r\nactivity = \"1.8.0\"\r\nfirebaseFirestore = \"25.0.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-room-compiler = { module = \"androidx.room:room-compiler\", version.ref = \"roomRuntime\" }\r\nandroidx-room-compiler-v250 = { module = \"androidx.room:room-compiler\", version.ref = \"roomCompiler\" }\r\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"roomRuntime\" }\r\nandroidx-room-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"roomRuntime\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nandroidx-lifecycle-livedata-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\r\nandroidx-lifecycle-viewmodel-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-viewmodel-ktx\", version.ref = \"lifecycleViewmodelKtx\" }\r\nandroidx-navigation-fragment-ktx = { group = \"androidx.navigation\", name = \"navigation-fragment-ktx\", version.ref = \"navigationFragmentKtx\" }\r\nandroidx-navigation-ui-ktx = { group = \"androidx.navigation\", name = \"navigation-ui-ktx\", version.ref = \"navigationUiKtx\" }\r\nandroidx-legacy-support-v4 = { group = \"androidx.legacy\", name = \"legacy-support-v4\", version.ref = \"legacySupportV4\" }\r\nandroidx-fragment-ktx = { group = \"androidx.fragment\", name = \"fragment-ktx\", version.ref = \"fragmentKtx\" }\r\nfirebase-auth-ktx = { group = \"com.google.firebase\", name = \"firebase-auth-ktx\", version.ref = \"firebaseAuthKtx\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\nandroidx-annotation = { group = \"androidx.annotation\", name = \"annotation\", version.ref = \"annotation\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nfirebase-firestore = { group = \"com.google.firebase\", name = \"firebase-firestore\", version.ref = \"firebaseFirestore\" }\r\n\r\n[plugins]\r\nandroidApplication = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrainsKotlinAndroid = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngoogleGmsGoogleServices = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/gradle/libs.versions.toml	(date 1716906806494)
@@ -22,6 +22,7 @@
 annotation = "1.6.0"
 activity = "1.8.0"
 firebaseFirestore = "25.0.0"
+firebaseStorageKtx = "21.0.0"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
@@ -46,6 +47,7 @@
 androidx-annotation = { group = "androidx.annotation", name = "annotation", version.ref = "annotation" }
 androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
 firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", version.ref = "firebaseFirestore" }
+firebase-storage-ktx = { group = "com.google.firebase", name = "firebase-storage-ktx", version.ref = "firebaseStorageKtx" }
 
 [plugins]
 androidApplication = { id = "com.android.application", version.ref = "agp" }
Index: app/src/main/java/com/example/greenmarket/ui/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.greenmarket.ui.home\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.TextView\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.greenmarket.databinding.FragmentHomeBinding\r\nimport com.example.greenmarket.db.GMDatabase\r\nimport com.example.greenmarket.db.model.Prodotto\r\n\r\nclass HomeFragment : Fragment() {\r\n\r\n    private var _binding: FragmentHomeBinding? = null\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.\r\n    private val binding get() = _binding!!\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n\r\n        val homeViewModel =\r\n            ViewModelProvider(this).get(HomeViewModel::class.java)\r\n\r\n        _binding = FragmentHomeBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n\r\n        val textView: TextView = binding.textHome\r\n        /*homeViewModel.text.observe(viewLifecycleOwner) {\r\n            textView.text = it\r\n        }*/\r\n\r\n        homeViewModel.readAllProdotti()\r\n        homeViewModel.listaProdotti.observe(viewLifecycleOwner) {\r\n            textView.text = it.size.toString() + \", \" + it[it.size-1].nome + \", \" + it[it.size-2].nome +\r\n                    \", \" + it[it.size-3].nome + \", \" + it[it.size-4].nome + \", \" + it[it.size-5].nome +\r\n                    \", \" + it[it.size-6].nome + \", \" + it[it.size-7].nome + \", \" + it[it.size-8].nome\r\n        }\r\n\r\n        //homeViewModel.deleteAllProdotti()\r\n\r\n        /*val studentListObserver = Observer<Array<Prodotto>> {\r\n            /*for(prod in it)\r\n                Log.d(\"MainActivity\",\"${prod.nome} ${prod.descrizione} ${prod.prezzo}\")*/\r\n            val ultimo = it.size - 1\r\n            textView.text = it[ultimo].nome\r\n        }\r\n        homeViewModel.listaProdotti.observe(viewLifecycleOwner, studentListObserver)*/\r\n\r\n        return root\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/greenmarket/ui/home/HomeFragment.kt b/app/src/main/java/com/example/greenmarket/ui/home/HomeFragment.kt
--- a/app/src/main/java/com/example/greenmarket/ui/home/HomeFragment.kt	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/java/com/example/greenmarket/ui/home/HomeFragment.kt	(date 1716911889162)
@@ -1,26 +1,27 @@
 package com.example.greenmarket.ui.home
 
 import android.annotation.SuppressLint
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import android.util.Log
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.ImageView
 import android.widget.TextView
 import androidx.fragment.app.Fragment
 import androidx.lifecycle.Observer
 import androidx.lifecycle.ViewModelProvider
+import com.example.greenmarket.databinding.ActivityMainBinding
 import com.example.greenmarket.databinding.FragmentHomeBinding
 import com.example.greenmarket.db.GMDatabase
 import com.example.greenmarket.db.model.Prodotto
+import com.example.greenmarket.ui.login.UserProfileActivity
 
 class HomeFragment : Fragment() {
 
-    private var _binding: FragmentHomeBinding? = null
-
-    // This property is only valid between onCreateView and
-    // onDestroyView.
-    private val binding get() = _binding!!
+    private lateinit var binding: FragmentHomeBinding
 
     @SuppressLint("SetTextI18n")
     override fun onCreateView(
@@ -32,7 +33,7 @@
         val homeViewModel =
             ViewModelProvider(this).get(HomeViewModel::class.java)
 
-        _binding = FragmentHomeBinding.inflate(inflater, container, false)
+        binding = FragmentHomeBinding.inflate(inflater, container, false)
         val root: View = binding.root
 
         val textView: TextView = binding.textHome
@@ -47,6 +48,13 @@
                     ", " + it[it.size-6].nome + ", " + it[it.size-7].nome + ", " + it[it.size-8].nome
         }
 
+        val imageView: ImageView = binding.iconaProfiloUtente
+
+        binding.iconaProfiloUtente.setOnClickListener {
+            val intent = Intent(requireContext(), UserProfileActivity::class.java)
+            startActivity(intent)
+        }
+
         //homeViewModel.deleteAllProdotti()
 
         /*val studentListObserver = Observer<Array<Prodotto>> {
@@ -59,9 +67,4 @@
 
         return root
     }
-
-    override fun onDestroyView() {
-        super.onDestroyView()
-        _binding = null
-    }
 }
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_user_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_user_profile.xml b/app/src/main/res/mipmap-anydpi-v26/ic_user_profile.xml
new file mode 100644
--- /dev/null	(date 1716907334047)
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_user_profile.xml	(date 1716907334047)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@mipmap/ic_user_profile_adaptive_back"/>
+    <foreground android:drawable="@mipmap/ic_user_profile_adaptive_fore"/>
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Material3.Light\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ui.login.ResetPasswordActivity\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@style/Theme.Material3.Light.NoActionBar\"/>\r\n        <activity\r\n            android:name=\".ui.login.LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"GreenMarket\"\r\n            android:theme=\"@style/Theme.Material3.Light.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.login.RegisterActivity\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@style/Theme.Material3.Light.NoActionBar\" />\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/AndroidManifest.xml	(date 1716912272630)
@@ -36,6 +36,11 @@
         <activity
             android:name=".MainActivity"
             android:exported="true" />
+        <activity
+            android:name=".ui.login.UserProfileActivity"
+            android:exported="false"
+            android:theme="@style/Theme.Material3.Light.NoActionBar"/>
+
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.home.HomeFragment\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/text_home\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:textAlignment=\"center\"\r\n        android:textSize=\"20sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
--- a/app/src/main/res/layout/fragment_home.xml	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1716908746523)
@@ -19,4 +19,14 @@
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
+
+    <ImageView
+        android:id="@+id/iconaProfiloUtente"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="67dp"
+        android:layout_marginEnd="37dp"
+        android:src="@mipmap/ic_user_profile"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/greenmarket/ui/login/UserProfileActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/greenmarket/ui/login/UserProfileActivity.kt b/app/src/main/java/com/example/greenmarket/ui/login/UserProfileActivity.kt
new file mode 100644
--- /dev/null	(date 1716999829737)
+++ b/app/src/main/java/com/example/greenmarket/ui/login/UserProfileActivity.kt	(date 1716999829737)
@@ -0,0 +1,338 @@
+package com.example.greenmarket.ui.login
+
+import android.content.Intent
+import android.net.Uri
+import android.os.Bundle
+import android.util.Log
+import android.widget.Toast
+import androidx.activity.result.ActivityResultCallback
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.appcompat.app.AppCompatActivity
+import com.bumptech.glide.Glide
+import com.example.greenmarket.databinding.ActivityProfiloUtenteBinding
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.auth.FirebaseUser
+import com.google.firebase.firestore.FirebaseFirestore
+import com.google.firebase.storage.FirebaseStorage
+import com.google.firebase.storage.StorageReference
+import java.net.URL
+import java.security.MessageDigest
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+
+
+class UserProfileActivity : AppCompatActivity() {
+    private lateinit var binding: ActivityProfiloUtenteBinding
+    private lateinit var db: FirebaseFirestore
+    private val currentUser = FirebaseAuth.getInstance().currentUser
+    private var originalData: Map<String, Any>? = null
+    private var storageRef = FirebaseStorage.getInstance().reference
+    private var uri: Uri? = null
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+
+        //Inizializzazione del binding
+        binding = ActivityProfiloUtenteBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        //Inizializzazione db Firestore
+        db = FirebaseFirestore.getInstance()
+
+        //Inizializzazione storage Firebase
+        storageRef = FirebaseStorage.getInstance().reference.child("images")
+
+        //Accesso alla galleria
+        val galleryImage = registerForActivityResult(
+            ActivityResultContracts.GetContent(),
+            ActivityResultCallback {
+                if (it != null) {
+                    binding.imageViewProfile.setImageURI(it)
+                    uri = it
+                }
+            }
+        )
+
+        // Ottenere l'ID dell'utente corrente
+        if (currentUser != null) {
+            val userID = currentUser.uid
+            Log.d("UserProfileActivity", "User ID: $userID")  // Log l'ID dell'utente corrente
+
+            db.collection("users").document(userID).get()
+                .addOnSuccessListener {
+                    if (it != null && it.exists()) {
+                        val name = it.getString("nome")
+                        val surname = it.getString("cognome")
+                        val address = it.getString("indirizzo")
+                        val photo = it.getString("foto")
+
+                        // Aggiorna le EditText con i dati recuperati
+                        binding.editTextNomeUP.setText(name)
+                        binding.editTextCognomeUP.setText(surname)
+                        binding.editTextIndirizzoUP.setText(address)
+                        if (!photo.isNullOrEmpty()) {
+                            Glide.with(this)
+                                .load(photo)
+                                .into(binding.imageViewProfile)
+                        } else {
+                            Log.d("UserProfileActivity", "Nessuna immagine trovata per l'utente.")
+                        }
+                        originalData = it.data
+                    } else {
+                        // Documento non trovato
+                        Log.w("UserProfileActivity", "Documento non trovato")
+                        Toast.makeText(this, "Dati non visualizzabili", Toast.LENGTH_SHORT).show()
+                    }
+                }
+                .addOnFailureListener {
+                    // Gestisci l'errore
+                    Log.e("UserProfileActivity", "Errore nel caricamento dei dati")
+                    Toast.makeText(this, "Errore nel caricamneto dei dati", Toast.LENGTH_SHORT).show()
+                }
+        } else {
+            // Utente non loggato
+            Log.w("UserProfileActivity", "Utente non loggato")
+            Toast.makeText(this, "Utente non loggato", Toast.LENGTH_SHORT).show()
+        }
+
+        // Listener per la scelta dell'immagine
+        binding.textViewModProfileImage.setOnClickListener {
+            galleryImage.launch("image/*")
+        }
+
+        // Listener per il logout
+        binding.textViewLogout.setOnClickListener {
+            FirebaseAuth.getInstance().signOut()
+            val intent = Intent(this, LoginActivity::class.java)
+            startActivity(intent)
+            finish()  // Chiudi l'attività corrente
+        }
+
+        //Modifica i dati nel db Firestore
+        binding.buttonSave.setOnClickListener {
+            saveData()
+        }
+
+        //Ripristina i dati originali nel db Firestore
+        binding.buttonCancel.setOnClickListener {
+            cancelChanges(originalData)
+        }
+
+        //Elimina un'account utente dal db Firestore
+        binding.textViewEliminaAccount.setOnClickListener{
+            deleteAccount()
+            val intent = Intent(this, LoginActivity::class.java)
+            startActivity(intent)
+        }
+    }
+
+
+    //Funzione per aggiornare i dati nel db Firestore
+    private fun saveData() {
+        val nome = binding.editTextNomeUP.text.toString().trim()
+        val cognome = binding.editTextCognomeUP.text.toString().trim()
+        val indirizzo = binding.editTextIndirizzoUP.text.toString().trim()
+
+        currentUser?.let { user ->
+            val updates = mutableMapOf<String, Any>()
+            updates.clear()
+            originalData?.let { original ->
+                if (original["nome"] != nome && nome.isNotEmpty()) {
+                    updates["nome"] = nome
+                } else if (nome.isEmpty()) {
+                    Toast.makeText(this, "Inserisci il tuo nome", Toast.LENGTH_SHORT).show()
+                    return
+                }
+
+                if (original["cognome"] != cognome && cognome.isNotEmpty()) {
+                    updates["cognome"] = cognome
+                } else if (cognome.isEmpty()) {
+                    Toast.makeText(this, "Inserisci il tuo cognome", Toast.LENGTH_SHORT).show()
+                    return
+                }
+
+                if (original["indirizzo"] != indirizzo && indirizzo.isNotEmpty()) {
+                    updates["indirizzo"] = indirizzo
+                } else if (indirizzo.isEmpty()) {
+                    Toast.makeText(this, "Inserisci il tuo indirizzo", Toast.LENGTH_SHORT).show()
+                    return
+                }
+            }
+
+            //COMPAIONO DEI MESSAGGI IN MODO NON COERENTE
+            Log.d("UserProfileActivity", "Aggiornamenti: $updates")
+
+
+            if (updates.isNotEmpty()) {
+                db.collection("users").document(user.uid).update(updates)
+                    .addOnSuccessListener {
+                        Toast.makeText(this, "Dati aggiornati con successo", Toast.LENGTH_SHORT).show()
+                        updates.clear()
+                        Log.d("UserProfileActivity", "Aggiornamenti: $updates")
+                    }
+                    .addOnFailureListener { e ->
+                        Log.e("UserProfileActivity", "Errore nell'aggiornamento dei dati", e)
+                        Toast.makeText(this, "Errore nell'aggiornamento dei dati", Toast.LENGTH_SHORT).show()
+                    }
+            } else {
+                Toast.makeText(this, "Nessun dato da aggiornare", Toast.LENGTH_SHORT).show()
+            }
+
+            uri?.let { imageUri ->
+                CoroutineScope(Dispatchers.IO).launch {
+                    try {
+                        val newImageStream = contentResolver.openInputStream(imageUri)
+                        val newImageHash = newImageStream?.use { stream -> getHash(stream.readBytes()) }
+
+                        if (newImageHash == null) {
+                            withContext(Dispatchers.Main) {
+                                Toast.makeText(this@UserProfileActivity, "Errore nel calcolo dell'hash della nuova immagine", Toast.LENGTH_SHORT).show()
+                            }
+                            return@launch
+                        }
+
+                        db.collection("users").document(user.uid).get()
+                            .addOnSuccessListener { document ->
+                                CoroutineScope(Dispatchers.IO).launch {
+                                    val currentImageUrl = document.getString("foto")
+                                    if (currentImageUrl != null) {
+                                        val currentImageHash = URL(currentImageUrl).openStream().use { inputStream ->
+                                            getHash(inputStream.readBytes())
+                                        }
+
+                                        if (newImageHash != currentImageHash) {
+                                            withContext(Dispatchers.Main) {
+                                                uploadNewImage(imageUri, user, storageRef, db)
+                                            }
+                                        } else {
+                                            withContext(Dispatchers.Main) {
+                                                Toast.makeText(this@UserProfileActivity, "L'immagine è già presente nel database", Toast.LENGTH_SHORT).show()
+                                            }
+                                        }
+                                    } else {
+                                        withContext(Dispatchers.Main) {
+                                            uploadNewImage(imageUri, user, storageRef, db)
+                                        }
+                                    }
+                                }
+                            }
+                            .addOnFailureListener {
+                                CoroutineScope(Dispatchers.Main).launch {
+                                    Toast.makeText(this@UserProfileActivity, "Errore nel recupero dell'immagine corrente", Toast.LENGTH_SHORT).show()
+                                }
+                            }
+                    } catch (e: Exception) {
+                        withContext(Dispatchers.Main) {
+                            Log.e("UserProfileActivity", "Errore durante il calcolo dell'hash dell'immagine", e)
+                            Toast.makeText(this@UserProfileActivity, "Errore durante il calcolo dell'hash dell'immagine", Toast.LENGTH_SHORT).show()
+                        }
+                    }
+                }
+            }
+        }
+    }
+        /*
+        // Salvataggio dell'immagine ed aggiornamento dei dati nel db Firestore
+        storageRef = storageRef.child(System.currentTimeMillis().toString())
+        currentUser?.let {user ->
+            uri?.let { uri ->
+                storageRef.putFile(uri).addOnSuccessListener {
+                    storageRef.downloadUrl
+                        .addOnSuccessListener { url ->
+                            val updatedData = mapOf(
+                                "nome" to binding.editTextNomeUP.text.toString().trim(),
+                                "cognome" to binding.editTextCognomeUP.text.toString().trim(),
+                                "indirizzo" to binding.editTextIndirizzoUP.text.toString().trim(),
+                                "foto" to url.toString()
+                            )
+                            db.collection("users").document(user.uid).set(updatedData)
+                                .addOnSuccessListener {
+                                    Toast.makeText(this, "Dati salvati con successo", Toast.LENGTH_SHORT).show()
+
+                                }
+                                .addOnFailureListener { e ->
+                                    Toast.makeText(this, "Errore nel salvataggio: ${e.message}", Toast.LENGTH_SHORT).show()
+                                }
+                        }
+                        .addOnFailureListener{
+                            Toast.makeText(this, "Errore nel download dell'URL", Toast.LENGTH_SHORT).show()
+                        }
+                }
+                    .addOnFailureListener{
+                        Toast.makeText(this, "Errore durante putFile", Toast.LENGTH_SHORT).show()
+
+                    }
+            } ?: run {
+                Toast.makeText(this, "Nessuna immagine selezionata", Toast.LENGTH_SHORT).show()
+            }
+        }
+
+         */
+
+    //Funzione per gestire l'inserimento della nuova immagine
+    private fun uploadNewImage(uri: Uri, user: FirebaseUser, storageRef: StorageReference, db: FirebaseFirestore) {
+        val userImageRef = storageRef.child("images/${user.uid}.jpg")
+        userImageRef.putFile(uri)
+            .addOnSuccessListener {
+                userImageRef.downloadUrl
+                    .addOnSuccessListener { url ->
+                        db.collection("users").document(user.uid).update("foto", url.toString())
+                            .addOnSuccessListener {
+                                Toast.makeText(this, "Foto caricata con successo", Toast.LENGTH_SHORT).show()
+                            }
+                            .addOnFailureListener { e ->
+                                Log.e("UserProfileActivity", "Errore nel salvataggio della foto", e)
+                                Toast.makeText(this, "Errore nel salvataggio della foto", Toast.LENGTH_SHORT).show()
+                            }
+                    }
+                    .addOnFailureListener { e ->
+                        Log.e("UserProfileActivity", "Errore nel recupero dell'URL della foto", e)
+                        Toast.makeText(this, "Errore nel recupero dell'URL della foto", Toast.LENGTH_SHORT).show()
+                    }
+            }
+            .addOnFailureListener { e ->
+                Log.e("UserProfileActivity", "Errore nel caricamento della foto", e)
+                Toast.makeText(this, "Errore nel caricamento della foto", Toast.LENGTH_SHORT).show()
+            }
+    }
+
+    //Funzione che calcola l'hash di un'array di byte
+    private fun getHash(bytes: ByteArray): String {
+        val digest = MessageDigest.getInstance("SHA-256")
+        val hashBytes = digest.digest(bytes)
+        return hashBytes.joinToString("") { "%02x".format(it) }
+    }
+
+    //Funzione per ripristinare i dati nel db Firestore
+    private fun cancelChanges(originalData: Map<String, Any>?) {
+        originalData?.let {
+            binding.editTextNomeUP.setText(it["nome"] as String)
+            binding.editTextCognomeUP.setText(it["cognome"] as String)
+            binding.editTextIndirizzoUP.setText(it["indirizzo"] as String)
+            binding.imageViewProfile.setImageURI(Uri.parse(it["foto"] as String))
+        }
+    }
+
+    //Funzione per eliminare un'account utente dal db Firestore
+    private fun deleteAccount(){
+        currentUser?.let {
+            db.collection("users").document(it.uid).delete()
+                .addOnSuccessListener {
+                    Log.d("Firestore", "Utente eliminato con successo!")
+                }
+                .addOnFailureListener { e ->
+                    Log.w("Firestore", "Errore durante l'eliminazione dell'utente", e)
+                }
+            it.delete().addOnCompleteListener { task ->
+                if (task.isSuccessful) {
+                    Log.d("UserProfileActivity", "Account eliminato.")
+                } else {
+                    Log.e("UserProfileActivity", "Errore durante l'eliminazione dell'account.", task.exception)
+                }
+            }
+
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/greenmarket/ui/login/RegisterActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.greenmarket.ui.login\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\nimport com.example.greenmarket.R\r\nimport com.example.greenmarket.databinding.ActivityRegistrazioneBinding\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\n\r\nclass RegisterActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityRegistrazioneBinding\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityRegistrazioneBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = FirebaseFirestore.getInstance()\r\n        binding.buttonRegister.setOnClickListener{\r\n            val name = binding.editTextNome.text.toString().trim()\r\n            val surname = binding.editTextCognome.text.toString().trim()\r\n            val index = binding.editTextIndirizzo.text.toString().trim()\r\n            val email = binding.editTextEmail.text.toString().trim()\r\n            val password = binding.editTextPassword.text.toString().trim()\r\n            val confirmPassword = binding.editTextConfirmPassword.text.toString().trim()\r\n\r\n            if(name.isNotEmpty() && surname.isNotEmpty() && index.isNotEmpty() && email.isNotEmpty() && password.isNotEmpty() && confirmPassword.isNotEmpty()){\r\n                if(password == confirmPassword){\r\n                    //Salvataggio dati utente\r\n                    val userMap = hashMapOf(\r\n                        \"nome\" to name,\r\n                        \"cognome\" to surname,\r\n                        \"indirizzo\" to index,\r\n                        \"email\" to email,\r\n                        \"password\" to password\r\n                    )\r\n\r\n                    val userId = FirebaseAuth.getInstance().currentUser!!.uid\r\n                    firebaseAuth.createUserWithEmailAndPassword(email, password)\r\n                    db.collection(\"users\").document(userId).set(userMap)\r\n                        .addOnSuccessListener{\r\n                            Toast.makeText(this, \"Registrazione avvenuta con successo\", Toast.LENGTH_SHORT).show()\r\n                            binding.editTextNome.text.clear()\r\n                            binding.editTextCognome.text.clear()\r\n                            binding.editTextIndirizzo.text.clear()\r\n                            binding.editTextEmail.text.clear()\r\n                            binding.editTextPassword.text.clear()\r\n                            binding.editTextConfirmPassword.text.clear()\r\n                            val intent = Intent(this, LoginActivity::class.java)\r\n                            startActivity(intent)\r\n                        }\r\n                        .addOnFailureListener{\r\n                            Toast.makeText(this, \"Errore durante la registrazione\", Toast.LENGTH_SHORT).show()\r\n                        }\r\n                }else{\r\n                    Toast.makeText(this, \"Password non corrispondenti\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }else{\r\n                Toast.makeText(this, \"Compila tutti i campi\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n        binding.textViewAccedi.setOnClickListener{\r\n            val intent = Intent(this, LoginActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/greenmarket/ui/login/RegisterActivity.kt b/app/src/main/java/com/example/greenmarket/ui/login/RegisterActivity.kt
--- a/app/src/main/java/com/example/greenmarket/ui/login/RegisterActivity.kt	(revision ad9692b169cad1237576b52722a5d23153d0c451)
+++ b/app/src/main/java/com/example/greenmarket/ui/login/RegisterActivity.kt	(date 1716906292384)
@@ -2,6 +2,7 @@
 
 import android.content.Intent
 import android.os.Bundle
+import android.util.Log
 import android.widget.Toast
 import androidx.activity.enableEdgeToEdge
 import androidx.appcompat.app.AppCompatActivity
@@ -16,6 +17,7 @@
 
     private lateinit var binding: ActivityRegistrazioneBinding
     private lateinit var firebaseAuth: FirebaseAuth
+    private lateinit var db: FirebaseFirestore
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
 
@@ -23,43 +25,52 @@
         setContentView(binding.root)
 
         firebaseAuth = FirebaseAuth.getInstance()
-        val db = FirebaseFirestore.getInstance()
+        db = FirebaseFirestore.getInstance()
+
         binding.buttonRegister.setOnClickListener{
             val name = binding.editTextNome.text.toString().trim()
             val surname = binding.editTextCognome.text.toString().trim()
-            val index = binding.editTextIndirizzo.text.toString().trim()
+            val address = binding.editTextIndirizzo.text.toString().trim()
             val email = binding.editTextEmail.text.toString().trim()
             val password = binding.editTextPassword.text.toString().trim()
             val confirmPassword = binding.editTextConfirmPassword.text.toString().trim()
+            val photo = "https://imgur.com/a/AJkXyR3"
 
-            if(name.isNotEmpty() && surname.isNotEmpty() && index.isNotEmpty() && email.isNotEmpty() && password.isNotEmpty() && confirmPassword.isNotEmpty()){
+            if(name.isNotEmpty() && surname.isNotEmpty() && address.isNotEmpty() && email.isNotEmpty() && password.isNotEmpty() && confirmPassword.isNotEmpty()){
                 if(password == confirmPassword){
-                    //Salvataggio dati utente
-                    val userMap = hashMapOf(
-                        "nome" to name,
-                        "cognome" to surname,
-                        "indirizzo" to index,
-                        "email" to email,
-                        "password" to password
-                    )
-
-                    val userId = FirebaseAuth.getInstance().currentUser!!.uid
-                    firebaseAuth.createUserWithEmailAndPassword(email, password)
-                    db.collection("users").document(userId).set(userMap)
-                        .addOnSuccessListener{
-                            Toast.makeText(this, "Registrazione avvenuta con successo", Toast.LENGTH_SHORT).show()
-                            binding.editTextNome.text.clear()
-                            binding.editTextCognome.text.clear()
-                            binding.editTextIndirizzo.text.clear()
-                            binding.editTextEmail.text.clear()
-                            binding.editTextPassword.text.clear()
-                            binding.editTextConfirmPassword.text.clear()
-                            val intent = Intent(this, LoginActivity::class.java)
-                            startActivity(intent)
+                    firebaseAuth.createUserWithEmailAndPassword(email, password)
+                        .addOnSuccessListener {
+                            val userID = firebaseAuth.currentUser?.uid
+                            Log.d("UserProfileActivity", "User ID: $userID")  // Log l'ID dell'utente corrente
+                            if (userID != null) {
+                                //Salvataggio dati utente
+                                val userMap = hashMapOf(
+                                    "nome" to name,
+                                    "cognome" to surname,
+                                    "indirizzo" to address,
+                                    "foto" to photo
+                                )
+                                db.collection("users").document(userID).set(userMap)
+                                    .addOnSuccessListener{
+                                        Toast.makeText(this, "Registrazione avvenuta con successo", Toast.LENGTH_SHORT).show()
+                                        binding.editTextNome.text.clear()
+                                        binding.editTextCognome.text.clear()
+                                        binding.editTextIndirizzo.text.clear()
+                                        binding.editTextEmail.text.clear()
+                                        binding.editTextPassword.text.clear()
+                                        binding.editTextConfirmPassword.text.clear()
+                                        val intent = Intent(this, LoginActivity::class.java)
+                                        startActivity(intent)
+                                    }
+                                    .addOnFailureListener{
+                                        Toast.makeText(this, "Errore durante la registrazione", Toast.LENGTH_SHORT).show()
+                                    }
+                            }
                         }
                         .addOnFailureListener{
                             Toast.makeText(this, "Errore durante la registrazione", Toast.LENGTH_SHORT).show()
                         }
+
                 }else{
                     Toast.makeText(this, "Password non corrispondenti", Toast.LENGTH_SHORT).show()
                 }
